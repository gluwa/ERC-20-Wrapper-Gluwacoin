{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xA1AE16fC54Cdd9B5F165D24cF4e3C2F6C4FCD6cc",
    "txHash": "0xd212d8d7c5e70c9131d6ca549e22ec3385990dc1a861bea9181138fb9876198f"
  },
  "proxies": [
    {
      "address": "0x9341A61714D7b9B9fbefF575248E2bb41bbaBd78",
      "txHash": "0x4806f8c82a387c386f529a3684c9c44294a75fabe4a9a351c3795c72a47b2b60",
      "kind": "transparent"
    },
    {
      "address": "0xE46933C734B6b94Acd73181Ef43ea6cC987bF717",
      "txHash": "0x8e7d0eb14a48b585d501bb0a868460c3f742ed93cb93061f529c7d6dfe20b18a",
      "kind": "transparent"
    },
    {
      "address": "0xD06c1A708a14f9ff506B7501559D256295534f27",
      "txHash": "0x7d30d12a3329871d42c4563ebd30e2ada722e4bcbeebd2354e24b29321a53c7e",
      "kind": "transparent"
    },
    {
      "address": "0x7BD56092EE5412aad8E49cb6c896C7FC108c538B",
      "txHash": "0xca2c1fbb1356654f13be33b5a770c95dd37edeb1815888ae86e6b222e306e957",
      "kind": "transparent"
    },
    {
      "address": "0xad189009f19F8094a5b6Bc15c06D4979E1A7195E",
      "txHash": "0xde3b9815af347d6a71ece22be13bfc75f1d6bdbb80694535c7741cfca69a26e8",
      "kind": "transparent"
    },
    {
      "address": "0x64237326f7CD236bE15ffE2128E26f7B6A4d534a",
      "txHash": "0x1ceffdd1652e906f018711242fe02edbd194e4921bbaacec13051374975367e2",
      "kind": "transparent"
    },
    {
      "address": "0x039E13a0b45a6A5304cB924eD47dbf07950F5CDb",
      "txHash": "0x0df85aa963904b7ee124a9d2cbb196efe1779e43ba2400ed1474cad94bab039e",
      "kind": "transparent"
    },
    {
      "address": "0xd384699FFF11f5579fe5Fbcb70f5F28261E3cE6D",
      "txHash": "0x9c6e41738c4162d1d2ef51b1f4849d94a6818f1738149db5648fb23df0fdd42e",
      "kind": "transparent"
    },
    {
      "address": "0x1Fe0e2CBE52ebFd071B1da360e9f05fa697890A9",
      "txHash": "0x3c365972dffef8c327b292f5855f8de21d01304640de484c678af42611a5e788",
      "kind": "transparent"
    },
    {
      "address": "0x5d832fe4a27C7F8FC09a586FBA7C09d1F03Bf1b7",
      "txHash": "0xea8056222a0b7dac305825bd2c043c56778a5b1d88d98ce700cd05576afa1d7b",
      "kind": "transparent"
    },
    {
      "address": "0xcabFC383d92c402eC412C32F2616212a6B7c19E1",
      "txHash": "0x13e37ad49628cafa6a5ce79405c0c702f23f5265df6f806bc8cd6b60e2f44dfb",
      "kind": "transparent"
    },
    {
      "address": "0x3bB843a389ab86972133Ab2f3d2c3Ea133a2cd6e",
      "txHash": "0x1ed9d10385d909a2a978f099250bbc30dcaef8c0d6808a126e56dc4849af94c0",
      "kind": "transparent"
    },
    {
      "address": "0xe29d49cC78fFc4a09fD1FBDcA7Cf7a125c7b3f70",
      "txHash": "0xbef3658a2efc8106547c01562aef42d7cd4fa8ac41bd01fe2530097df5c694b4",
      "kind": "transparent"
    },
    {
      "address": "0xAB564C2f44F94ed3efCfaF26346957da30Ec5078",
      "txHash": "0x0a73a9489baf16d0ee78b738af4a579e3aa7d681d2cac8abaf667dffc1d71c6b",
      "kind": "transparent"
    },
    {
      "address": "0xD158dC6a2a082F08A3A8cCA0922691C08Bef2281",
      "txHash": "0xa0fa88c5e550e465711d98d404f583b1f52ad53b96b01b19e9e24af283097ca8",
      "kind": "transparent"
    },
    {
      "address": "0x0237d20633ee04a58efC8E287cf3011Ba904BBE7",
      "txHash": "0x9a398fe73782e6119c9dac558fde6c856d18298d25a5b3c7558851c75f2568b1",
      "kind": "transparent"
    },
    {
      "address": "0xcB515EB772b4735e9e11CC251E21402182103Ad3",
      "txHash": "0x93b914aebb013dba8c30919869101f582fb3266f1847aa8ad911c0b544cd4d59",
      "kind": "transparent"
    },
    {
      "address": "0xc693896e816CE301d5dC31521b2D86f4D82E74A3",
      "txHash": "0xcc02afa3c8750b0d6ebe5d5e12c76d0c2e5eaeb8dce7bf1ad9b7972c2e2a31bf",
      "kind": "transparent"
    },
    {
      "address": "0x42A486175af08a2CcE5511714622a0b654256472",
      "txHash": "0xdb0b8c3ea922a0793d681fdb3e80fe2c1f9a5f99b5b35d11e61c41f2259b5156",
      "kind": "transparent"
    },
    {
      "address": "0x089A7889F8141C147644dd1247AC8cE7e7E1c580",
      "txHash": "0x89408d56e306399e9bc65501e34f35864b6161a969edd4e3b684c0e4faa565c1",
      "kind": "transparent"
    },
    {
      "address": "0x6993bA37D8b1466Ea7d3C0Fbe18579967378D9D2",
      "txHash": "0xe99e7b68388cafea4ccf5a644d9013b9c27bd14d59eb240d429f2e156d4ef452",
      "kind": "transparent"
    },
    {
      "address": "0xAc29D5bE215bD273E6EC65DAd0a8E1fdA4D5615f",
      "txHash": "0x1932f34e20a8d6699e5fec1b29d7990f6e5042c85bbec43114d6cf46364b050c",
      "kind": "transparent"
    },
    {
      "address": "0x843eFB957e8697398A4178263DCE7C49e78E4A4a",
      "txHash": "0xda9e7e043eba2931743be8d11b0e37a9a8250293b78d9b570c126452e56b5ae4",
      "kind": "transparent"
    },
    {
      "address": "0xf67240259d230B4a07C82Ced04300605b9e117D3",
      "txHash": "0x771893f7845557810c931d3b399de733af75ff8bf0b5759f26b1d3b8803d03bd",
      "kind": "transparent"
    },
    {
      "address": "0x785658667638aeDCad845EdC955F7c84119E1331",
      "txHash": "0x32a4b1792e911cc0d6e5ef84e7e5ac459ed08648f4dc4adab9bddeabb5e92351",
      "kind": "transparent"
    },
    {
      "address": "0xbfdd160339404CbeeE0351ee869067BC7790D0d3",
      "txHash": "0xed7347c3164744b817bf201654d8628a9820a723a853b10f79137dd35a5a8d07",
      "kind": "transparent"
    },
    {
      "address": "0x1eA4cd12D556EaE8C83abd1a088b893894188622",
      "txHash": "0x1ab8c5a1c58524f23e903157844cb76cd8b091ad563e71cb24a78b3a0bc4e9a4",
      "kind": "transparent"
    },
    {
      "address": "0x89ec79C952c8d5Fdf36DC1bF1Ded787FAbBDaCc6",
      "txHash": "0x997df60b7f2642a0baf6f12afaf668da2a63e8ae6eb6a01c284330fc130c4da1",
      "kind": "transparent"
    },
    {
      "address": "0x54de99C4c5eF623b00147A7A79EAdC319AF5Bf7b",
      "txHash": "0x79aed95fc05ba55338fa75ffaa805a3173c7e1fd09bdc7f19d743c36ea553185",
      "kind": "transparent"
    },
    {
      "address": "0x084C5dEc2FDfE12F57aFD8506cE44795dfE43282",
      "txHash": "0xe4ca7f25f9ab831eafdf3810e564db6a18b57f8b9d25d4a2724a2f80bc532400",
      "kind": "transparent"
    },
    {
      "address": "0xb2e47e2abC2146f6E2d98445db12c5Ed8eE87EfB",
      "txHash": "0xa3bfc8c351b75a06a4aab23255f771f73f44cedebc58d089cfff96852cc3d9b7",
      "kind": "transparent"
    },
    {
      "address": "0xAc615Bf070043acfb972eD94b3C850d91Ba07970",
      "txHash": "0x4a4f4248e4115754ea723e0536571852844059c4dd9fafd0f83f8df2b3a8b21e",
      "kind": "transparent"
    },
    {
      "address": "0xdb6ec241D269623d20B6B0a64BeD6C55cDf462F2",
      "txHash": "0xd59781cd3a531f5f641ae7ecd0406143a1daa0c813c783a001518f8d902ea32c",
      "kind": "transparent"
    },
    {
      "address": "0x3996d9ED61D149ee00249c9eaEf1C159Db65C0F9",
      "txHash": "0x4e413fd6a324dc2ab42f59ec8cb0960583622e919aab6dd492f30f7a2a73e33a",
      "kind": "transparent"
    },
    {
      "address": "0xfD63479c7EBC0cc2f8a290e3b1aA059978C6f9E7",
      "txHash": "0x41393d45dae5ee59f07035c3f8b384885728a01fe55c2554267542e78155d04b",
      "kind": "transparent"
    },
    {
      "address": "0x42E0edb503CFA193F1d6d454a3E209B196c6B625",
      "txHash": "0x761931174d92e5b2a2e9e206dfa99ef1e46ae85d50ad6c92b0c43ebc9adda125",
      "kind": "transparent"
    },
    {
      "address": "0x840A6E30C768F3e4EB1Ba7cED2bA402103800752",
      "txHash": "0x27f5f0a6b80ba54ef47e7e199ec21059321d7778b5845a0b4d523c03258ecd25",
      "kind": "transparent"
    },
    {
      "address": "0xC74B82a8609815630D285d4c1f82eb36d68f8232",
      "txHash": "0xd9860885c159745edf317eb8c6684b15da0f23998cc1811c32814b6c93331e3b",
      "kind": "transparent"
    },
    {
      "address": "0xab496b45A160A5312ea5604a65883939f49D5255",
      "txHash": "0x403e1407e5488693843616caaf1633694a49131f6d211d4f1a0fe1a898cb8e9c",
      "kind": "transparent"
    },
    {
      "address": "0x4222866d4f231C5d3191AdE5fdd9209b69fdBfcC",
      "txHash": "0xf80e435a08bb82d039fa7fd1253e8086483fa9ab837093d0d52a96defb42438f",
      "kind": "transparent"
    },
    {
      "address": "0xDde839c952843584969e668d0484A4FB0f90b84b",
      "txHash": "0x4a17cd461fd7591cb8aa8d53c4c16fd01a8d3760e05804e67e3cd8ab4b98f9d1",
      "kind": "transparent"
    },
    {
      "address": "0x8D5CE0c90772eccc27d5a03518767fA2AD4eCc7C",
      "txHash": "0xdb9915aca5b61262eb5b9c9a5c02bb801ebb8ce9711ca44d2acf57aceb718254",
      "kind": "transparent"
    },
    {
      "address": "0xAf8bCcA64d73515439D884FBe10EaDC628c86737",
      "txHash": "0xc280f504b3cfde39afae404356bab6ad109033951973d7eddf657321b56e0213",
      "kind": "transparent"
    },
    {
      "address": "0x8Ae9d3536021897Eb937CCA22aCBd60D59290B73",
      "txHash": "0xe8057f1976a55f599f00451a478b84572678474c3ab74dc038d0e2de3fe2dc6f",
      "kind": "transparent"
    },
    {
      "address": "0xa1B8BF50EE259E42F60556731c7AB3B55B6E4F56",
      "txHash": "0x532f9d0e741011386fa9d551ee4343545f20135d9ece5b4d7d768c97f5b3bdd0",
      "kind": "transparent"
    },
    {
      "address": "0x93D5a8a7eF1b5Cda3bF28C8d352524563746cD68",
      "txHash": "0xa3c296ea14fc4c0c0ab25aa190d8abb2183eceab6d3039e6a0b584fd31f87984",
      "kind": "transparent"
    },
    {
      "address": "0xb6EC5aA25F6cb83A0D6e90De1A6Ff8Fe34E10865",
      "txHash": "0xa49e7c4708cfc7d2ad48f6b2d09ad3bd11b91ac46837b012531edbb52cb4d4b9",
      "kind": "transparent"
    },
    {
      "address": "0x9f0D1d93a339c2Fa9Be1F2f3dC2C40Ad205c2BA3",
      "txHash": "0x5bd1025f879aed8fcb7579bf88464c27619fa36c9984bbf9647f5a428ea00d53",
      "kind": "transparent"
    },
    {
      "address": "0x7D54D2F8c43e081df7AA3C1150246be10579B859",
      "txHash": "0xe7f6f23bea0a267cad0df8c29353ac83f69a18e7adad5a7890ddd576bce8c317",
      "kind": "transparent"
    },
    {
      "address": "0xe6eb4B7137C8A1cD3A1afbD2Ec1C826E383123C9",
      "txHash": "0xaa7fbbb6c62402846f33e96d22f349a00ecda54af01447b552854dab9f9e7a89",
      "kind": "transparent"
    },
    {
      "address": "0x93671E266f88848148Fd332fec88fbCc0261e9E0",
      "txHash": "0xd26197a9460df5645f69393dfb3ff2ec5b72831b5c44a08c6274f09a9b3c9bda",
      "kind": "transparent"
    },
    {
      "address": "0x21541473ebD7b364aA05F52BD90f939a1Fd096A5",
      "txHash": "0xf567a8f7d0c971027be0a8070908defe67dbbc351ce6bcec6d50cc697bd45687",
      "kind": "transparent"
    },
    {
      "address": "0x5E2E059658148c92Cc6cEC97DAcCEF8D655c1cfd",
      "txHash": "0x0e140dcbf14fa5d97401378549a36b9069c92403040663f17d6371b2a2ffe1bd",
      "kind": "transparent"
    },
    {
      "address": "0xFE991a9AC86D3b6D278305386caE52Fd89b6b605",
      "txHash": "0x1071a13c5ebb204803b23387f47b45039505542ab6396b58237a8bbaabed1873",
      "kind": "transparent"
    },
    {
      "address": "0x0210d769091C77e10B5B601588899233be4C87CD",
      "txHash": "0x781aed2726cb01e176a8d53889d4ec6bd4b793558c35be5187c429d0db1a7d3f",
      "kind": "transparent"
    },
    {
      "address": "0xBBE2cc8b770DF46fF4C977E438abAc7B386c8edA",
      "txHash": "0xe9d6c0d880eb80a721390bd4bd22c0f26236da4afd3136f8857c45e39e1cc907",
      "kind": "transparent"
    },
    {
      "address": "0x4d4e26acE29d034Cf36d17C231BF268DF0c0eE95",
      "txHash": "0x3d9e937899e0504ed565e104bd52479c9652625b677ba59229087a8dff6d5834",
      "kind": "transparent"
    },
    {
      "address": "0x8E480950f37d7bF0B7724d6B80435c93c9BF68aA",
      "txHash": "0xda4b386fbfa1646633ae1d5dae5879875a698ec69d40ae1f9b7bf3653a1a7cc9",
      "kind": "transparent"
    },
    {
      "address": "0x0DdA2459f1DEF0b8E574C45DeC718eff98357212",
      "txHash": "0xc5a0ad5721243f3c2751e7786b3f1a8592bfea68e79008f526f4bad66c1ff94c",
      "kind": "transparent"
    },
    {
      "address": "0x90A35C0C1531badEdc27D080d73d15d236b5E38B",
      "txHash": "0x05f14cccf8b8f2eed3c3497338f4662c2f0232ed8c77799dd5774ae1c7c73a8d",
      "kind": "transparent"
    },
    {
      "address": "0x870Bf629B32D4C36486C5152eE234087e871FCC8",
      "txHash": "0xc25f36482f769a8c2859b3303b17283dd6bbf6432021bea1c359c93f29674c95",
      "kind": "transparent"
    },
    {
      "address": "0x54644863ea3721c53f301bf4349710080Ea53FC0",
      "txHash": "0x20da0eb5b8ce809fa05d65cbfd5b1a1c65f8fa48c22f9f27e9d4821fb86193a4",
      "kind": "transparent"
    },
    {
      "address": "0xbbAe57F1Fc2bb7553917078eA38Ae5A160A926f5",
      "txHash": "0x5325f0d7072c6086f92fa5fd4d0e94bb5d7cc43ca85269a0effe6c7c0c1e5c43",
      "kind": "transparent"
    },
    {
      "address": "0xD946fE7D8C17C58a0009B7dd77b3B209a6811023",
      "txHash": "0x4a947d8348f4ec229038c578b64803697250b24bc43ad3453abdd8b98cf9a3df",
      "kind": "transparent"
    },
    {
      "address": "0x67c043CAF41FbE714F52601cAB3eD2B48a4471B8",
      "txHash": "0xc1e6dd443d0f7c7a99cc4d181a0ce04598e1bea781b535dad1b7bbaab8a36b8a",
      "kind": "transparent"
    },
    {
      "address": "0xba072450Ec15e71ca16Acf3D844d55342454e08b",
      "txHash": "0x03460120a6e4703258aa7b3352acdbdc07bdef91bc362b9c4c597f8b0684f125",
      "kind": "transparent"
    },
    {
      "address": "0xEab6d21c9ee148594CF19359604b33cdAc115AFe",
      "txHash": "0xc7013be18d2fd0ab58ccb23413a3e651609d744847cdd887c370d1e32be70dd9",
      "kind": "transparent"
    },
    {
      "address": "0x33574124C7A5DcC3D2b2313f40AfbFAE8281e124",
      "txHash": "0x988fbb8e8988a7859892d8fda2ff9e6384bd11e247f46261b57eca0dacbb5c4b",
      "kind": "transparent"
    },
    {
      "address": "0xCC091db87E891d749F45051f8fA4EC4588241cd9",
      "txHash": "0xdc12fa82068c056082622a3bccf87508157817d9d9aa15482f2f0cd1ebb6b51b",
      "kind": "transparent"
    },
    {
      "address": "0x0c711dB1EF11258A21aE945a0614F9374C443a94",
      "txHash": "0x347a3a9c54607d47eb1cf16b3fc93d7bf1f5fa69052655a5c48afdd9edf8e476",
      "kind": "transparent"
    },
    {
      "address": "0x645F31f5577fe3609db7D0EBf0Ee4E2b6CBF7FFf",
      "txHash": "0x74a455165d73e3caf31813c6742e186dd25edae70117a243a7c4ceacfd6f7b19",
      "kind": "transparent"
    },
    {
      "address": "0x055B0b24C25DFebF068C252445Cb2AaCCD19ef22",
      "txHash": "0xfa7c2e260e3b2ba2408103dede5b8bd8dce10bfcba4e4c802f9b56477755d21b",
      "kind": "transparent"
    },
    {
      "address": "0x17F141846Acd37e857e8b94294b9e3B75a0ed29E",
      "txHash": "0x1239f0ed2550ec69f7823e9001c9ebd94064c861ba4c00763012375808bf3aee",
      "kind": "transparent"
    },
    {
      "address": "0x5B6d507A5189c9C1fa8fD9582215845B0c332FFC",
      "txHash": "0x9ff5dc90f780e41e367051a1cd22cc523e53f00705c8315b828992d8659d70e5",
      "kind": "transparent"
    },
    {
      "address": "0x81b7cCC09C340EeB9Ca432b15af4ac271c74fce1",
      "txHash": "0xb7d7a0455d59ca4386809afebcb7839cf7485fe362bd52d368e8225e17a61f59",
      "kind": "transparent"
    },
    {
      "address": "0xba0982C5C441A0b74FCe42b029e439E2578e11Dc",
      "txHash": "0xf92ce64fef30ea0f1aa58f86d8ee7e92daa93c4edb6051fecef7e135c8fddf6f",
      "kind": "transparent"
    },
    {
      "address": "0x64ca74b30222dCd07a863030C9F8451ce8C35DA4",
      "txHash": "0x678357357ee564702a25f769697df59c90b045a40a9a96cfabd1234038767f92",
      "kind": "transparent"
    },
    {
      "address": "0xc2554fC15b2C313f1f6Ecc2Fb98Ed611B42cCd5C",
      "txHash": "0xb25b330ec3325560cdcabc579a01fc0c101fabc091f8d278cdf49050b8b5dfdb",
      "kind": "transparent"
    },
    {
      "address": "0xB92D5417cdB97CA1bEF72c8b08B73A0fab08BA39",
      "txHash": "0xdc89a1049a380fc13d5588bbaeec41d86a820f722a2175d0e2862794a8f6182e",
      "kind": "transparent"
    },
    {
      "address": "0x9643066bE958418DF6C5Bd6648Ad0a7c4bEdE01e",
      "txHash": "0xca69925825249ac26b66c8c2489deb0e25cb82e0e7ba03a5fae9d848d191e89d",
      "kind": "transparent"
    },
    {
      "address": "0xCCBf78b0745340cCc8eCdC721eF8FD813942D093",
      "txHash": "0x2f8a6dec2ad66b4b6967f6d22acac03445fac12c925566ad3bbf502d2eb8db06",
      "kind": "transparent"
    },
    {
      "address": "0x6a477550285D207bD1819bbA8F2c402Cc4aD8f24",
      "txHash": "0x6fac9a206e869621327588fcace4faf7a69f9bbb2990db45e8aebdd38ea1351f",
      "kind": "transparent"
    },
    {
      "address": "0x871b760aE6d97aB6D8B5ec4415B9fF04c4859066",
      "txHash": "0xd2f9dceba1c0cb5cc7bf87473ff86e54c09c8363adf492dc288b0f8a06a03ac7",
      "kind": "transparent"
    },
    {
      "address": "0x13E519AB8081DBcc625ee140196712fA6BaAD2c3",
      "txHash": "0x8ce0c909b84a495e2dbd699be967f80880c4cc13ff05bca3652e5aeeb3c61cc2",
      "kind": "transparent"
    },
    {
      "address": "0xc9EEecD1012ad1F13F9A1c0F454D3616D53f0362",
      "txHash": "0x008893b142abf0858800bd012f535d0e734e3517123c795bd0f4865c743d562b",
      "kind": "transparent"
    },
    {
      "address": "0x7F343a9f38F21D1D4e35aA5F0e886bD35CCd7d8C",
      "txHash": "0x741d0ab6558a726e1810f04e5d6de6884888f49b9a2061530a225cd157532502",
      "kind": "transparent"
    },
    {
      "address": "0x1145fD479b528834d0AA84a9028553e73973e14d",
      "txHash": "0x4a7ded98774ccd18a64f7eb1703ba9fe1ccb55d22b320b88a56241d167db00ff",
      "kind": "transparent"
    },
    {
      "address": "0x96ea8662Dd9D0E0E1924905Db622Ae2b53c4Ae08",
      "txHash": "0x8a81264b0c9547ba997add7869a5f128ceb4333c0e8f78cdcaa87c33b2356153",
      "kind": "transparent"
    },
    {
      "address": "0xB9C40b1075a263a9830ae8b02Cb0656A185Ec1f9",
      "txHash": "0x0cc804abc47c190a597139bd26a916705ea0500cfa673df4b41dda15c9ad9d14",
      "kind": "transparent"
    },
    {
      "address": "0x5eBb69526792557AE6C22cf6e2D692e00F1267E0",
      "txHash": "0xac0fe1f3c584cef3bc180edcb540cf572aefed45b2aab59dbe8e8d446a7d8d71",
      "kind": "transparent"
    },
    {
      "address": "0x50ed48B7CA234875c1535eF3208b299Af66579CB",
      "txHash": "0x19882ae0a8b271ebadd3a7c8aeffa56aaa44766e1d6cdedd21c29157503b3e02",
      "kind": "transparent"
    },
    {
      "address": "0x021e115149c0765266eFf29B763DD4fE54B18B77",
      "txHash": "0x7015f2b75afc7fb164db81109cf5f3738452bd91aed698965d925c30540fb476",
      "kind": "transparent"
    },
    {
      "address": "0x664598E4EDbE1f2CD7d2cE4C32f428D21d98299f",
      "txHash": "0x3d15443af08df356b7a560495128a5c57a37e226ed74b4fe6d96eec7812cb3ae",
      "kind": "transparent"
    },
    {
      "address": "0x3171462F6dBa27813F8eeb0a4A88073afFfF090a",
      "txHash": "0x03e24eae7b6eebbf1f093a319c05f9e33a2ab96fd02fdba5e6c6851389ef9548",
      "kind": "transparent"
    },
    {
      "address": "0xd376DeB0bf7aaFb8f84B1F97FAF0f0B226908019",
      "txHash": "0xf97563aada1c6020936cc93944bb5aede1b3e53630a7da5d3873af39e0efabfb",
      "kind": "transparent"
    },
    {
      "address": "0x6B685c5911a99A56F3ae70B9d9ddD843D20186b2",
      "txHash": "0xb44027c11fdc5cbe7a672a1d845bc84ca913e2405ed717822faa517ead2fa125",
      "kind": "transparent"
    },
    {
      "address": "0x228CF26B82FfaC8E98Cf1057d0915B3bc1f39849",
      "txHash": "0x272eea87dd1023f291ccf904f08a852923904577b5e2fd81cc14f88b3fe3a9e3",
      "kind": "transparent"
    },
    {
      "address": "0x3a7241AbF79588BEFb97D2C8eD061e7B090cA7C6",
      "txHash": "0xff4a2e6c39af027a50d93b1cc2e63ba425f7729b68edf1c6af0870689eb8735b",
      "kind": "transparent"
    },
    {
      "address": "0x5e752B1DFA77E875cD7569ba226d6Fec6357A390",
      "txHash": "0x21bd8bd76f1d422f6cae125d780fd69b35141ab07ba703ccaa54016d07711e25",
      "kind": "transparent"
    },
    {
      "address": "0x712c2Dd92aB8aEeA24F5eB715218Bf7EE3a8608f",
      "txHash": "0xfc2fbb2986396e97ebcb45368d61f9783753b2e5bf51645f125082394bb4e2d7",
      "kind": "transparent"
    },
    {
      "address": "0x0fE7b9FC4F5356BFe768CED979747F4eDF09837b",
      "txHash": "0x624c319d04a6d4d79388560d93e4a5c2d6e7957854d382fe60041dc33b10f442",
      "kind": "transparent"
    },
    {
      "address": "0x9678E93a9D0E274164613528B79ddC767843dA4d",
      "txHash": "0x494c63c9f00dc2f3b30661e712bfa2cb985756415ed05b91a789867d116c6071",
      "kind": "transparent"
    },
    {
      "address": "0x6881495678a95D6D01A25a3E94478aE691E0576f",
      "txHash": "0x902e850b078c351ff3628e2f042ceae7d798f261375c8eee62dc1669d191778b",
      "kind": "transparent"
    },
    {
      "address": "0x2764FF4316dCc47429bb85011E4c04f596678848",
      "txHash": "0x0d1c1f97fc727f8204751ccf81775a2afc97c3f45e6221270415f09c3eef2ea1",
      "kind": "transparent"
    },
    {
      "address": "0x0F3FC93465735b75b3341F00ffA451b85A6E0Db2",
      "txHash": "0x634f8c636828d959b713814326312f8fd9c4f2dedd4ed98231f8ea9377cd3088",
      "kind": "transparent"
    },
    {
      "address": "0xDA2309e4154B20CfFF59D8C8f446Ae1Bd92D3CB9",
      "txHash": "0xf75bea781ec3c67761b7ed271cd705f77a827184df3044721de2ab58db202894",
      "kind": "transparent"
    },
    {
      "address": "0x6fFa436ad71DA3B99a0985629a6B5B74ECaF1611",
      "txHash": "0x667d217e11e2d57136b626e037d69edcfc7f367d80d203167a6838edfea0752a",
      "kind": "transparent"
    },
    {
      "address": "0xc5ff34DB130eF274ffb1895d70AE2ccafC84c0c8",
      "txHash": "0xe783719f1d7f583acc2654b893baeb1c87e648ede6ccdd21ccafc9911a4b4f97",
      "kind": "transparent"
    },
    {
      "address": "0xd1987598f4b6E0bA6B59Aa3Cb67cc3d3763B555A",
      "txHash": "0x4ea94160fedab4e6ce26fafa8532a62caaea7130c3144543494cd37a6c252590",
      "kind": "transparent"
    },
    {
      "address": "0x63bCF6184dC89B89Be9B399eFFAaEc21203A6399",
      "txHash": "0x0fadb5caf4869c1329c4e5982cdd41f0d63cbe65f83cc0823b3750b31b3cf08f",
      "kind": "transparent"
    },
    {
      "address": "0x5895447101E2837d4177f78Ed3EEFFd0637a7933",
      "txHash": "0x569cd2adc5fd3da5f0a24900641208ed907d6a763cd1cbf619354a48595d23e2",
      "kind": "transparent"
    },
    {
      "address": "0x2ad1959a585b5Edc44Bd09A954e06fF99eeAf9fa",
      "txHash": "0x6f2049075b49a7a4b1347a0f9a621e9216e6e398373e0bb42fd1e440c6ab955e",
      "kind": "transparent"
    },
    {
      "address": "0xa43De542679cB9f1e9dAC49302577ea5aEa4E741",
      "txHash": "0x7156368d4984094c2921f2f51e5a1ecf5a9327e6a28b58acff50380bb3b536ab",
      "kind": "transparent"
    },
    {
      "address": "0xB6765053a86fd10a98B6D81C55FFCce417358909",
      "txHash": "0xdb96d2c0df3f8b0facdeb4590b8382070d8519e06e074ebb0fb89d6e9d95256c",
      "kind": "transparent"
    },
    {
      "address": "0x7f126D296DE343e478954584B087fFDdb19Bf4D5",
      "txHash": "0x073419a0a9e41c976f77c0fa3da12cc921015ce98c5eda054dfe1e05c70bdf2c",
      "kind": "transparent"
    },
    {
      "address": "0x08C781514129b9C7F1e4807a8B651cf7D878aAA5",
      "txHash": "0x7cb9c494b9c6b4fa8de8a08a7b5361c9afcfb3243d0cda4b25973d440ce8fec4",
      "kind": "transparent"
    },
    {
      "address": "0x777999a1568E4b4C2E32EB4Fdf783F797e7CABF2",
      "txHash": "0x99cb360f42129e6e24f741c7d36fcedea9025f8f1c2d244c37d9935ada412812",
      "kind": "transparent"
    },
    {
      "address": "0x7dF77F24710FD3BBDca0943E3D18BbC56cF17ec9",
      "txHash": "0x3e4e29542e85f55d6347995deb81fe810c95539b056236cdcbf8f874d9024ea2",
      "kind": "transparent"
    },
    {
      "address": "0xa68412057486771864a3f75Cbf4A6A8d648ED55F",
      "txHash": "0x8a3c5f1db7aad47aa2d97c790734046840fe58ec0082fcaa60f9c7e6f80f1962",
      "kind": "transparent"
    },
    {
      "address": "0x464507F2cf0ED8cb3D9cA6aa7F7f794C876aacD4",
      "txHash": "0xc1c9d7c734c131211a0bb03c9185c465909bb5230b205b93e9feff13f528769e",
      "kind": "transparent"
    },
    {
      "address": "0xe73c19783726b89C7eD284D516d070387EFe0755",
      "txHash": "0xbe38ecea653e2c2625ed9a2b83b3900daf4316088741309e12663a8312c2d307",
      "kind": "transparent"
    },
    {
      "address": "0x1638E14d827ef85a729b50d4888a104320529EB9",
      "txHash": "0xae51a3be27143077f6621ccf60676ee2995c45c33359750fceaf575c4166506f",
      "kind": "transparent"
    },
    {
      "address": "0xDEa6aEf3f799C9314e2E0aF3D3943fb609704eC8",
      "txHash": "0xff0be578ed999b6ad1d7c6719dc34c4295106d16acd5ddf5f7f4655cd4b8db7e",
      "kind": "transparent"
    },
    {
      "address": "0x2FD0e4f3d6F50118551f8C2831596eB7ba1AaFFf",
      "txHash": "0x7315680e0007bac7e0f837b180cb9dc7ba0388df9f90594a12386b729152cf28",
      "kind": "transparent"
    },
    {
      "address": "0xc06DfB87311b53C166634215325450BFf95103cF",
      "txHash": "0x6eb45047d299748829dc561b7f2282c5417ae45283a2e0f5217dbf9078848de2",
      "kind": "transparent"
    },
    {
      "address": "0xF43b8961F5150d1Ef8D33ec96d511E62B39Aec63",
      "txHash": "0xefe0154b93c18f5febb870032d05f14294c158a5dcacea8b440dc0e66e8304fa",
      "kind": "transparent"
    },
    {
      "address": "0x8B93e67016ABdA56A8AcfC91be84046BBCc1a3C6",
      "txHash": "0x2ff7f9a23cc2c25a659bf7b26d6ceb028268c8a5235172536594b124ce58d873",
      "kind": "transparent"
    },
    {
      "address": "0x87d4F7BE9062E6bb07A3075Ab60810735531A446",
      "txHash": "0x0e59c92a0005faccce08cbce48dbee212d3940065681f14c4cb03181a9cbc32f",
      "kind": "transparent"
    },
    {
      "address": "0x5800Caf9c53897BAAdE0cbA32FF714707F0A0F40",
      "txHash": "0xb6cfb29e408ddf9729d788b7eed381c5110e3629329a058e81053a198ae8c0c4",
      "kind": "transparent"
    },
    {
      "address": "0xd8D468676B73641F8dD430Ad097121A0ba93b5be",
      "txHash": "0x6322a120df68af6983449e6da62526513f2c671cd39c0becdaa4f5e48d34410d",
      "kind": "transparent"
    },
    {
      "address": "0xC34C8e63E5B3f5d87FE38AC9aa014124062bF465",
      "txHash": "0x51d9765fdb5907352cf824f46f0668dc659875346852f2e76b085442c3f8a188",
      "kind": "transparent"
    },
    {
      "address": "0x8ABA491C264Db7707EdD0e0373f1ad8cAB1d21cC",
      "txHash": "0xa4b06220f9f8c249d9ce667b2f0e9d4bdb3cf5651d27540c0c4bfa49a4fcc8ab",
      "kind": "transparent"
    },
    {
      "address": "0x999B9F7789cc4e528991C00e7a624080e4F4d5a5",
      "txHash": "0x8cf9d5734b730c4df1923b752d4f53e47dc8db8636023277b655ac4a49281ae5",
      "kind": "transparent"
    },
    {
      "address": "0x43624d6372129bbB807DADeDB28551C2aC8f0175",
      "txHash": "0x64aaeb0194794d59028f84c8de9caa22503683c89e1f5cd564041d28235b66f5",
      "kind": "transparent"
    },
    {
      "address": "0x63Fa35716b19727812f05D6749DF642207A77b23",
      "txHash": "0x470206f6cd60aaae3ab3d9842c47862cb064d78c49162701ddf3b29dde291671",
      "kind": "transparent"
    },
    {
      "address": "0xECbE09F67c6E39500Eea2f1D27012861ff471EC3",
      "txHash": "0x33aedf7ee845ecdd06a8a2af625c7339129c7ec95a86b064793c16de1f6e4470",
      "kind": "transparent"
    },
    {
      "address": "0xEeB3b9f7E28eB971e3bE5F3D5BB83e2BD7fc2E96",
      "txHash": "0xc3d767c3e635116d64fe765d376f3ab78891011be8805fef73809db639cc1c54",
      "kind": "transparent"
    },
    {
      "address": "0x6779d2fDC68ec1Fe7371C5dF30eD9124dCba0b6F",
      "txHash": "0x2217526d78659910af00e66c4278bdeebe6858f8a761026bae8f73cad4a0213e",
      "kind": "transparent"
    },
    {
      "address": "0x95fC5a82faE7Bc8e5Eb2B6e45b39018342014310",
      "txHash": "0x68dc96cba536e7fdca470464172ef3c2fd5397b73a11639ff189afde99ef0ebc",
      "kind": "transparent"
    },
    {
      "address": "0xf37A55f905195468B5F26E7F410b6197D7831E14",
      "txHash": "0xc9453d3d6fa951f0d6f7457642c542d74d4ee54dccdfcc2320cde1761a5a856e",
      "kind": "transparent"
    },
    {
      "address": "0x5575EB5954831feEf625772311eA5E016f32bcc7",
      "txHash": "0x82ac81e5101ab341abac5c2eb0a2f8de340cfa6616f3c7d49ae66b699b51b52d",
      "kind": "transparent"
    },
    {
      "address": "0xca4a82Ca225cc269D4C31B91CeDDE7519aDb541D",
      "txHash": "0xfe3f068f59015bc55bb9eb65d931ab0d2184a748c84d08579bf66bbf04ed19c9",
      "kind": "transparent"
    },
    {
      "address": "0x779A16c1EEdb787EE67a7413E9CF9829b2eBD570",
      "txHash": "0xcdac976db987ed70af06f5747ead1e6dd8ccc6ce0d83e8a8a2a126fce2250c2f",
      "kind": "transparent"
    },
    {
      "address": "0x779573E8CA9F7DAa01C55A055559810fc0fdE683",
      "txHash": "0xe9e3f93e3d7ba119fe56ea24c4f58b65b2aba33aee5016abef737b059de7b12c",
      "kind": "transparent"
    },
    {
      "address": "0xA53Ac8D1365EaA542e50AE7a3068E90632D5CDE2",
      "txHash": "0xd354cb2de1199e8459e8b598275830b4431a8f397f61999d1da03ce0d4ffc88d",
      "kind": "transparent"
    },
    {
      "address": "0x3FEDCCE01F5364A27b44F87f06D196fD2bA0E57E",
      "txHash": "0x991aca9d18736781a15c397754b0537430ab10109bb6d1165e62fc25886148e3",
      "kind": "transparent"
    },
    {
      "address": "0xA5554a9394363908c5aaB37eC6bfc232294Eb98d",
      "txHash": "0xcf35cb850c42710a89df9188c8891c53cc29c3066ccc7b321e47ca77e7c9ca13",
      "kind": "transparent"
    },
    {
      "address": "0xfA8d51679f8f809Ce09255e0BA47C412bA9Bb8AA",
      "txHash": "0x167b8ceb531e580c1f8621b5937a167a0a578db915d0972df4661f8d722dddf6",
      "kind": "transparent"
    },
    {
      "address": "0x6901d1421Ce89Fdb87C351F1b8791f31FFa901cA",
      "txHash": "0xdedf2330f695ecbfabc691327df0c8117230b34b877a7171dec36c7d49a0c39a",
      "kind": "transparent"
    },
    {
      "address": "0x8f1916c18cade5CB0BaB0B5dd607b2f33ACEF8B3",
      "txHash": "0x389f37e9eb49191663ca3c93b33b109d3fb48624592eadca6bce3cbb4480465f",
      "kind": "transparent"
    },
    {
      "address": "0x41F4599222f6f7c4e8E19ea061fa8595d8dFABF1",
      "txHash": "0x2f06438aa5fe456185500fbb73429c292416323331e2d5d43b16c6c60fc96394",
      "kind": "transparent"
    },
    {
      "address": "0x11Ba78eD748B142B5B61D717e799230cC6998eac",
      "txHash": "0x3d18dd448edb777e1749a18a94c5c7637b6871fedbccfc151db17dd7263b873f",
      "kind": "transparent"
    },
    {
      "address": "0x8eae328111f4641A5FBDf492efef65df8Cd1e31b",
      "txHash": "0xd669902dcc70f793eaacbb02cbca1ce107e3634140efd9b01e80e904fbaa5ee2",
      "kind": "transparent"
    },
    {
      "address": "0xEB6B54D141Aff57E28a3a6f2a94B1e65E1Ee8Db9",
      "txHash": "0x3d664ac9fa8299736b6f87ad4effe73fafde0682f053f2450c8cc5429ca4551e",
      "kind": "transparent"
    },
    {
      "address": "0x01c4C8F939948D7c2772Aa3455C7A51C9Eb69D49",
      "txHash": "0xb6744d0264a07fdc420470094f104bb368cbbb730471896724e4868012207095",
      "kind": "transparent"
    },
    {
      "address": "0x1e9AE687f09DB3C8fb647b806486cC4384782c7c",
      "txHash": "0xa0925cf61eadeb76258c7479e899b05962521198cbf88f117d746e26d4a78560",
      "kind": "transparent"
    },
    {
      "address": "0x5Cc7A39A47566736244D6d702fDDD1CEcdD7Fc98",
      "txHash": "0x686ff0330483b03cd980677231873fdd8f24f3e54236640426834eebc7233c27",
      "kind": "transparent"
    },
    {
      "address": "0x564bbfD88a443531bF954641f2Ad687F48047585",
      "txHash": "0xdfbeafb0ae0cf81c58df02b6951db59fbdf7e32b3553f38f49bf149a5254635e",
      "kind": "transparent"
    },
    {
      "address": "0xd6D427F0F66b67D3291c04E7EEb65484A2401087",
      "txHash": "0x5963b66982486a6e96aeb89842676c546eddc80e852fa4e9de9fda30954a16a5",
      "kind": "transparent"
    },
    {
      "address": "0x47c456E83Acecb3e6d2A2cC37c57B390F017963E",
      "txHash": "0xaf23708f4fc7110f12af9f693c8fa76f66c5208dec019b4baa4eb34d0e1d53f3",
      "kind": "transparent"
    },
    {
      "address": "0xa2ef41cb26e00a2e456f189906Ca4D70313E8Aab",
      "txHash": "0xc2cc134776d96f01b87c2704c2012142e65c97eeded87dfaa7fc15c1223aa477",
      "kind": "transparent"
    },
    {
      "address": "0x79f65865C1C8d4644D125fA562424663f1Cd0F32",
      "txHash": "0xf297c35128fad00c386c27756a4dfbaa818bb688ec016da379ba835b19640631",
      "kind": "transparent"
    },
    {
      "address": "0x54D9D509f851B478BF3Bab918c5F56FE8b1204e1",
      "txHash": "0xc6c4b0c287202e09804871923e017ddae9278614bc125feec131f6367bee9a9c",
      "kind": "transparent"
    },
    {
      "address": "0x78bc07B36ba92bACDA637eD23ac999F142c2EAdE",
      "txHash": "0xa3d0325512f0f0452932b4ad8655a9ae1d8c4525cfc6e302a8f491293424ca32",
      "kind": "transparent"
    },
    {
      "address": "0x6BF56322DfDff904632c46295bCc1702F673217a",
      "txHash": "0xacf045a361a297740b8d552d0e1554b11af7a5f98865e6546c28554ac0cb7a66",
      "kind": "transparent"
    },
    {
      "address": "0x9995a0D730C3A69Be6eAa2e1250d5688A7a5bF33",
      "txHash": "0xb2e8a6c49e1106ce964127908d59d5e0d5a3c59aa54aadeda3b28c26d00d4c70",
      "kind": "transparent"
    },
    {
      "address": "0xe714064A0615f40C8Aac9141132BB2BA84A1506c",
      "txHash": "0x0fd522f3ed1d00606b6110c9be2d9c3f85558f8b822deab14a1d1e699581a8d7",
      "kind": "transparent"
    },
    {
      "address": "0xc543c8D5d05b2Fd89A7631BED497f5d8010ec774",
      "txHash": "0x325ec1710685e5f7659d616f346a720451e1bbef90b976bf65e439b30b3e1061",
      "kind": "transparent"
    },
    {
      "address": "0xf246De3E8199d5d70827070870e87BE81144bD65",
      "txHash": "0x9b7a34974de9eb6dfd9dbbd19d89c79ef21bfb95346119e2c2b5d85d66a0f055",
      "kind": "transparent"
    },
    {
      "address": "0xa366eA623a9ff551688D94Be7045846f108bd758",
      "txHash": "0xdb232cc6f2a06b44fc7d133c504cfb3221a564166201e9bda1078b723bb655f1",
      "kind": "transparent"
    },
    {
      "address": "0x423531B910cDc9B28D6B17Ef4254d4cE7194c7bD",
      "txHash": "0xf86479165e7943add82c19cd56086b0aa111578c47f55c101badfcbd6f2f5583",
      "kind": "transparent"
    },
    {
      "address": "0x1A00e4b5B5e382f1e89BEF175AB030E23f92449b",
      "txHash": "0x170ee96afd3d2b363b797dd30bf63dfb397c78783d174b807e0bdb2e29e4953e",
      "kind": "transparent"
    },
    {
      "address": "0x5568465e30421a61eba67Ab412205aCcd35da38B",
      "txHash": "0x41ed570d34df07320672d3db994f74cd1dd865d9c08e233fc8fe0239d462a1a5",
      "kind": "transparent"
    },
    {
      "address": "0x09cF195ee95536Bd1866ee4E2E2cc8A2327B1342",
      "txHash": "0x11c93b0a65128a8a53129d0d857c56ec9171dc9171a50e7a46526a7342197da6",
      "kind": "transparent"
    },
    {
      "address": "0x91e2eAC4E5857F0eF75b3b0450d6E412B398E46e",
      "txHash": "0x003abe2c9da6bb440b58509ac09da65873eaa0639e8ec66d5a23dd580f7b34b2",
      "kind": "transparent"
    },
    {
      "address": "0x36fd05B68724F6FF582865450622f4766C0AEba6",
      "txHash": "0xaf189cc698d4f9bd2deb5c98555e475d8fc43cbaa5e6291c07401c1921aede5c",
      "kind": "transparent"
    },
    {
      "address": "0x4dF0d8dFC3B3ba45854d3EBDF54eCc0364278387",
      "txHash": "0x48e7a0608925b9c3d5e6e1aa953522da2a4000e5a660d5cc1a55e3546c2b813d",
      "kind": "transparent"
    },
    {
      "address": "0x47b4554Ea307f570435bF2a362c387e73dFdc0f0",
      "txHash": "0xf1515b5bba0d806441e3e0e2c15ced1a2c9ab3246fcbb5989604dcf2accc54c3",
      "kind": "transparent"
    },
    {
      "address": "0x6E0d31a68a0931652809ADACc720d2049d6af482",
      "txHash": "0xa48150936186bc658221612a4c27275ea61ce592c9e5e382e0dec90cfe143d73",
      "kind": "transparent"
    },
    {
      "address": "0x90E05433600E00cB85Eb22080508032978C2D99a",
      "txHash": "0xe1044410364c5fb9fbbfab05ef840b75080a86e77f14f6599e88cfb80ea1e7e0",
      "kind": "transparent"
    },
    {
      "address": "0xD262EeE145567e3e48eb0007BB884d8489d6eab0",
      "txHash": "0x89950318c16133e222296c450630441650cd3470259edd585c1fbcb80ff7db02",
      "kind": "transparent"
    },
    {
      "address": "0xEDB74b9024ED1044CF4EDf5A2ac2ce529982C50F",
      "txHash": "0x589ef2081d8c5fbe252446ade2171f84b76d1a906d4062513a29b278fb580a29",
      "kind": "transparent"
    },
    {
      "address": "0x753032eB431e1A4f4372cDc77Ac55a331BBAca8e",
      "txHash": "0xc3217a3d44386ef43cb692774b9e2207dee2056c8651eb123c5d327cbd364368",
      "kind": "transparent"
    },
    {
      "address": "0x05641D0d8419Ade55A081eAa8eb32e09c4dE7e7b",
      "txHash": "0xa452a61d938f526926a71c38bbd045311beabe6bd0e64f246db245932b72c096",
      "kind": "transparent"
    },
    {
      "address": "0x1832635C23f56D51D32E3AcA549bcB564682edFa",
      "txHash": "0xf9aa0d389b6d07eb0c83a466a56edaa3b34d0977141015aa52bd929f59bc2e19",
      "kind": "transparent"
    },
    {
      "address": "0x959Ab9aeFabDf8B8fb10AE3174446de977e0Ec10",
      "txHash": "0xeb856f4e696a325ee3e405d1c9d5d93c6f980b7f538c82f15c40f0d5656704dc",
      "kind": "transparent"
    },
    {
      "address": "0x3005AD86D778C2850A1C936E13b139e17d438037",
      "txHash": "0xf81a60bc97156a3af9096aede063cea6f28931a1df05bd1d62cb80a459c472ec",
      "kind": "transparent"
    },
    {
      "address": "0x55C4c34515415b1A8B25FC89C8F932eDe2ABC15A",
      "txHash": "0x972447dd0308dcd2a4dc4a5ea79415eb78f82ef3a35b27fa618b532a92c9e812",
      "kind": "transparent"
    },
    {
      "address": "0x3E1d5a8067C9e7059df14FdF9147643691CCb58E",
      "txHash": "0x9cbad927d3b23375e0bc0b832a15f36b84ea7a5868fe783476c3d8c25280abcb",
      "kind": "transparent"
    },
    {
      "address": "0x075B542b0e8370e7E246D85350c51Aa7B7dB6fC1",
      "txHash": "0x07498408a3a399c0fcf8409bb5713ea7529ca1a7d9696adb8df247a19a720000",
      "kind": "transparent"
    },
    {
      "address": "0x33D209802Ec71048F8b19489a028dB91C1Bf1A62",
      "txHash": "0xfa87fd38dacfb6f591ed7cf7ce2e6bdbd0a74753132b4645dfef2f367ec1f39d",
      "kind": "transparent"
    },
    {
      "address": "0xB4940446Bd3608071498f97DA900003b4b60AfB4",
      "txHash": "0x2642edd488987bbccf458915f21cca65108c4329581c45feb7a5c260c1f24437",
      "kind": "transparent"
    },
    {
      "address": "0x6Bd0Fc125A5A6c3eA8F70aca31C4d5Bb4E7F20f9",
      "txHash": "0x493e1c318822861757428cbf24e9eefc477ac454a7a32ffa66f89474953f54e1",
      "kind": "transparent"
    },
    {
      "address": "0x289B1E882575Baae34D1852835ec59b70ACEF6E7",
      "txHash": "0x2f70ee0d4196865ba8aec2ac00f5c9c817881f03e071d8318d411eb4a5530ac3",
      "kind": "transparent"
    },
    {
      "address": "0x81114553999d6b19e297087C1784696323e5e95e",
      "txHash": "0x66ed681817022a23e9958b07ab6cd20fe3ecebf8d0b07ad1bf981be72d65bf9b",
      "kind": "transparent"
    },
    {
      "address": "0x78960c425eB8e4008270D5B1f2ad13199C85DF91",
      "txHash": "0xe81a6a613a6b677bcf87ac8bff19356f16ec1b3b8a05089e7181789ba0217afd",
      "kind": "transparent"
    },
    {
      "address": "0x2Dae09E7e38B27acB3C65FfD0AcDe592c97EDE37",
      "txHash": "0xff53986c6a36b1e23b9a16434205e9697da346af6cae0193447b047fa7e2e032",
      "kind": "transparent"
    },
    {
      "address": "0x923337A132b12796427d5036391F8629bbF2FA5B",
      "txHash": "0xb653e0806520b18956fa026b5b185ec6c4f0043fa887c45874f1c2cb2e87b7a3",
      "kind": "transparent"
    },
    {
      "address": "0x8f0483125FCb9aaAEFA9209D8E9d7b9C8B9Fb90F",
      "txHash": "0x24178798413ec58b9b1627a021ac1b811dc1de8502b77ea982a5153a28b4166a",
      "kind": "transparent"
    },
    {
      "address": "0x74F41E04f8C97CEf5Efa9A7B08e7c1b245C0F84C",
      "txHash": "0x3b881df3604dd416ebe10361ac59a65003dc7c692f6967a7f9f6c17f71c82e69",
      "kind": "transparent"
    },
    {
      "address": "0xBaFF6b645961280dc255af63A901e2a372bd2294",
      "txHash": "0x75da3278926392f110da2fe2855149c9539f29a801b33d4823e115358076f5b9",
      "kind": "transparent"
    },
    {
      "address": "0x98a43cD3b6B56352A2F53a0f7cC15074898c90c2",
      "txHash": "0x4a5b42fc4efef91f7501a0042df9ccb85b2c4dd9b8e95ed0c821f70e9daf15d7",
      "kind": "transparent"
    },
    {
      "address": "0x050837B1aD2f58d26C0928c68498D5804DF9FB55",
      "txHash": "0x3420f734790c27980869e3ce52cbe449a61a4247e3b0399485cfe172d53a6173",
      "kind": "transparent"
    },
    {
      "address": "0x41AC4a36f588fF05a0B641bca4e9EAd847abFEeC",
      "txHash": "0x5d6b80d5e1dd9db4ff0dd86043028b496445786642bd1de78349910f8be85403",
      "kind": "transparent"
    },
    {
      "address": "0xf7375De76Be89b1D32755A3Cb0E28d8963E63F76",
      "txHash": "0x71a9581ae23ab2e1f3ebd09686d7045c102ad5406f31216b0696ee77b9b29925",
      "kind": "transparent"
    },
    {
      "address": "0xFd96fE3b2b6Db680cB304e522eb516a163FAd7A9",
      "txHash": "0xedc8120a0d2f642fd3afb53bcaf4bef9dc81ca9ce9da5b84ad432790a2be0e47",
      "kind": "transparent"
    },
    {
      "address": "0xA679DE2b2cfb00163E6e2995A0Cf123F5E174633",
      "txHash": "0xd804d1f1eb9a63d8b409a6912591f98f5834fb212e457779ee170fe0890adbfe",
      "kind": "transparent"
    },
    {
      "address": "0x4aBD76d806Fc0A6C69087d4b17682b81b0000aFE",
      "txHash": "0xc359574ac860a5a7a3fcffcccf42a0e5105ca7af8651b50935759ed33ac3899f",
      "kind": "transparent"
    },
    {
      "address": "0x292842642905285d121EF290A34C44b98376481C",
      "txHash": "0x0a3e4146a7eb39caf3ef280862ed67032ba2afaa350829ffa203ad86ce35272c",
      "kind": "transparent"
    },
    {
      "address": "0x3aC5239cF28Cb91eA243f5dbbc6A66B2e040900f",
      "txHash": "0xe0f2d0c6161ba67758ce48baae558ee644756efdceb2cab2389693c86e4cee29",
      "kind": "transparent"
    },
    {
      "address": "0x7EE49D9534Bd7B5290Ef0C21865a82816012Bb93",
      "txHash": "0x252c6a60ed3ad23db7695c63754c711ba57f6ef0f2b456f54d609beac48fe91d",
      "kind": "transparent"
    },
    {
      "address": "0x9751a99f38787EA273DFE50963b0b83c6bd575fD",
      "txHash": "0x6459dfa4bfd5edd459abadfb8edfde127ad83e9af0098369bbfd8234530eb9b4",
      "kind": "transparent"
    },
    {
      "address": "0x1e4843896b5Fbd065671000A550D2b75eD90322e",
      "txHash": "0xd0057ed10a3b59d7c29d6924c35f769276bcab635a66ecacda40b6e398227102",
      "kind": "transparent"
    },
    {
      "address": "0x9f5671cc53D9E37A0E536742e470Bc07B8Ee7599",
      "txHash": "0x2b6698a26987bd593450ed0d8169fe33032a8a1e6ca27102c747709e39834958",
      "kind": "transparent"
    },
    {
      "address": "0x91C2dEBeb591502eedc1479597CFF9805FC1C095",
      "txHash": "0x067eab187dab73301852cc3dc10cec54bba68595386ca6f4accc386a9df03e82",
      "kind": "transparent"
    },
    {
      "address": "0xd81B2F37d95286DA4FA6f6b82cfEF309dB506c2F",
      "txHash": "0xa66027c99c9a85d6b62287857f682724677fce198a62b79eef6c4dab37bcd578",
      "kind": "transparent"
    },
    {
      "address": "0xA4bB2a9f0Fd6042375B7dAB375565Da8d0Ceb07c",
      "txHash": "0xbcbd16efb2044cece3b708bdc89ac92c939920c5938530cb07c123003ce05c25",
      "kind": "transparent"
    },
    {
      "address": "0x15297D442b0d6cc4fdb8623a7dc5C9C2B5dbC3cD",
      "txHash": "0xf003e9193cb3631d1683389a839e0ec94d4e94c55545814eba62a22b2977d6f1",
      "kind": "transparent"
    },
    {
      "address": "0x1B675899c0c2B3eB00d63cF1a0C76154160d2b21",
      "txHash": "0x55360a00474c9ddeb2134566b0064a32f496e2c0d9b3d7a3c6705822b5b216ff",
      "kind": "transparent"
    },
    {
      "address": "0x0Ce0f6ac9D98Ba12c4Bc756284a7Dc2a6FC188A8",
      "txHash": "0x6b9eb810ccfa1031b2b469a4d7b4aa38cff058942e48edf3ca95ea63a460258f",
      "kind": "transparent"
    },
    {
      "address": "0xAA709e21dD172C8ea6AeC7E1b475b300a1829fB3",
      "txHash": "0xbfdb49b3b65b1ef52f4348867a0f589633792b00a54a3f422970600ba7f00786",
      "kind": "transparent"
    },
    {
      "address": "0x53138Af2aa3CE05e31A12647d256b0a05600be08",
      "txHash": "0x824240af92d419fe1dd162578a9850b2b5706b69d57650d981cb80dc5d59ba65",
      "kind": "transparent"
    },
    {
      "address": "0x98a0989085674070E3f097A72eD602E8438a62b6",
      "txHash": "0x81e96f20a6531be480df39207bbd66279c3b7a6e2c0b6654bc97ee5cfe591ae6",
      "kind": "transparent"
    },
    {
      "address": "0x5f4FF1d4a9218adB645B5E495E920A364fd607a0",
      "txHash": "0x64550ebdf7f885f5c6de5a79a5bd6b0cb1c5fc46091d66885f35edd7f94e8c07",
      "kind": "transparent"
    },
    {
      "address": "0x8A26689848e858380638BF2577E060c1C07Bd079",
      "txHash": "0x1b428ff2735cfdf8b696a9a67f063f2bc6e204cc1d459dc05ba4330d5d48dcb9",
      "kind": "transparent"
    },
    {
      "address": "0x66413714350CE8EC76E5953bB22320601487c1c0",
      "txHash": "0xad61b218c30a1a5e4c77e4a03295eec05bd630bb5c7e39f983a22ede038bdb44",
      "kind": "transparent"
    },
    {
      "address": "0x65bb5Bd0E701f84eAF32dB944CCF21590f0a3aEE",
      "txHash": "0x634f241d68746ed11a6628cd236b1a767a6fdac523cf883473cf8305d2559ab8",
      "kind": "transparent"
    },
    {
      "address": "0x95f04c044b4B5E06e9AdA50AE9c4Ca798867b38B",
      "txHash": "0x432002c042bbefab6d6d6b6bd6d293e56404d5ec2e36ce9c97a204c3330eee89",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a65cdfa308566facef6065beb9e631bc7782c0699e2093fd7f5bc24c50583bce": {
      "address": "0xA57B8a5584442B467b4689F1144D269d096A3daF",
      "txHash": "0xc19387bfc9ac46d3804f7761c24e2f38f36b16fe91b82b07514218c851a7990d",
      "layout": {
        "storage": [
          {
            "contract": "Box",
            "label": "value",
            "type": "t_uint256",
            "src": "Box.sol:6"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "a927d5ee83af7f80649e185d0612523ebd19a107830c557d448fd87d85ad723f": {
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "txHash": "0x527f9bea2161c510833624eeede7027a1991c2bb59065379b19e2f7c11cb0b4a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1653_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:17"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:85"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)423_storage))",
            "src": "abstracts/ERC20Reservable.sol:36"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:39"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:167"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)2874",
            "src": "abstracts/ERC20Wrapper.sol:20"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:183"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC20PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol:39"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "Box.sol:21"
          },
          {
            "contract": "ExampleCoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ExampleCoin.sol:28"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IERC20)2874": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)423_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1653_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          }
        }
      }
    },
    "013da52c7b82615fb3770c59eb43e5829fc933b84dcbe81d7845ffdd105582ac": {
      "address": "0x0290FB167208Af455bB137780163b7B7a9a10C16",
      "txHash": "0x84428e523ea43998a25b844d8f4fbba4643ab4f131b4358d0e4b21c98a8cc6e1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1653_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:17"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:85"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)423_storage))",
            "src": "abstracts/ERC20Reservable.sol:36"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:39"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:167"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)2874",
            "src": "abstracts/ERC20Wrapper.sol:20"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:183"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "ERC20PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol:39"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "Box.sol:21"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(IERC20)2874": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)423_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1653_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          }
        }
      }
    },
    "86d8492a6c95b0005f97e57366fb61c931436c9569bc5808535cdbb70c91fac0": {
      "address": "0x0E696947A06550DEf604e82C26fd9E493e576337",
      "txHash": "0x8f6a94b2fe69332bc32c249e8f4de7374d7ab70d38bd2750334f736e2ad20b1b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1725_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:17"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:85"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)419_storage))",
            "src": "abstracts/ERC20Reservable.sol:36"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:39"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:167"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)3216",
            "src": "abstracts/ERC20Wrapper.sol:20"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:183"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "Box.sol:21"
          },
          {
            "contract": "ExampleCoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ExampleCoin.sol:28"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(IERC20)3216": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)419_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1725_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9808c14306e303552fe593f9442ce473e558945b8bdf94e6752d7305352f2a70": {
      "address": "0x00c61De6296352D4f7Bc871a6F862d345276C6c8",
      "txHash": "0x2f981e30675ad99fb4734077b412d3620745b947304b0ed287483ec3a5ff4324",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3304_storage)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)4795",
            "src": "abstracts/ERC20Wrapper.sol:22"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "abstracts/ERC20Wrapper.sol:264"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:19"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:121"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)786_storage))",
            "src": "abstracts/ERC20Reservable.sol:38"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:41"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "abstracts/ERC20Reservable.sol:295"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "ERC20WrapperGluwacoin.sol:64"
          },
          {
            "contract": "ExampleCoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ExampleCoin.sol:49"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)786_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)786_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)786_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)773"
              }
            ]
          },
          "t_enum(ReservationStatus)773": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)4795": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3304_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)3304_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)5050_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)5050_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4870_storage"
              }
            ]
          },
          "t_struct(Set)4870_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "8aec71e10d205a8646833a93d74678aac48fec4507d4d2ce4cddc4ad1c6a8713": {
      "address": "0x7d2c9Bbea75537eF07e2101dD47727864AcD0767",
      "txHash": "0x2000c6654848988d991e38a4d9fa35209aa78fd0567c915f73d186708d07687e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3786_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6297_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6602",
            "src": "abstracts/ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:265"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1154_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:277"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:93"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1154_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1154_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1154_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1140"
              }
            ]
          },
          "t_enum(ReservationStatus)1140": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6602": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6297_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6297_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6026_storage"
              }
            ]
          },
          "t_struct(Set)6026_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3786_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3786_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "38a490af8fe2d7ccffe1dbe6812e0b27dfdb6db4117a6c620183122e126e28f9": {
      "address": "0x81b7cCC09C340EeB9Ca432b15af4ac271c74fce1",
      "txHash": "0x9f923cf1a1f5b2023a4e6962f2a1eb15fb468f2b73cf66f9ca3b24fcd4e9a1c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3786_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6297_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6602",
            "src": "abstracts/ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:265"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1154_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:277"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:93"
          },
          {
            "contract": "ExampleCoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ExampleCoin.sol:51"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1154_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1154_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1154_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1140"
              }
            ]
          },
          "t_enum(ReservationStatus)1140": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6602": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6297_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6297_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6026_storage"
              }
            ]
          },
          "t_struct(Set)6026_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3786_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3786_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "4bfd4b011459df3cd773d5933c6972e04326e86243528a1f0adffb6cd8746bab": {
      "address": "0xd3E3bfB0452d16c048823C0b4760200e67044451",
      "txHash": "0xf0450723e3dd7c0e6b3d99d8edaf1089a9ca9640187ab5547bdf7761b3abd93a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3583_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6094_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6399",
            "src": "abstracts/ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:265"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1100_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:277"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:93"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1100_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1100_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1100_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1086"
              }
            ]
          },
          "t_enum(ReservationStatus)1086": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6399": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6094_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6094_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5823_storage"
              }
            ]
          },
          "t_struct(Set)5823_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3583_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3583_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "b8abd64e2426cd8012f9a96a159e83b4afec4181b3e817d76f49fa964d1821c9": {
      "address": "0x0F3FC93465735b75b3341F00ffA451b85A6E0Db2",
      "txHash": "0x908cdc39c810fe48e91130262bf21170df061dc2943ac254b183742219f24ea2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3724_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6235_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6540",
            "src": "abstracts/ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:265"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1154_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:277"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:93"
          },
          {
            "contract": "ExampleCoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ExampleCoin.sol:51"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1154_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1154_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1154_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1140"
              }
            ]
          },
          "t_enum(ReservationStatus)1140": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6540": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6235_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6235_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5964_storage"
              }
            ]
          },
          "t_struct(Set)5964_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3724_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3724_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "7b610f8c705066a243735174f9819ecee1c84e8e7ef5fb340acb841d93b0974b": {
      "address": "0x56224902B8b86f7fD8C5d2e2fFc5f640BFEc90Aa",
      "txHash": "0x9640bd30112bafecef777e3aae0a026d039f2196311945982b6b0f02904d542b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3604_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6115_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6420",
            "src": "abstracts/ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:265"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1121_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:277"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:100"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1121_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1121_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1121_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1107"
              }
            ]
          },
          "t_enum(ReservationStatus)1107": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6420": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6115_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6115_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5844_storage"
              }
            ]
          },
          "t_struct(Set)5844_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3604_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3604_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "2e1237415d3a00e3aa9afed1ffb8d74c4070597395a24b9e1cf7b12e4ba682f5": {
      "address": "0x5800Caf9c53897BAAdE0cbA32FF714707F0A0F40",
      "txHash": "0xc37b691c10bf2f564dc19c06d0ae89548f7d6c75c24df02977abdb579aba3f2a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3726_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6237_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6542",
            "src": "abstracts/ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:265"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1156_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:277"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:100"
          },
          {
            "contract": "ExampleCoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ExampleCoin.sol:45"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1156_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1156_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1156_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1142"
              }
            ]
          },
          "t_enum(ReservationStatus)1142": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6542": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6237_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6237_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5966_storage"
              }
            ]
          },
          "t_struct(Set)5966_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3726_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3726_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "1c6c41a91f37c3293b4d990bd25bd8d663fd0144aec853997afce34500494816": {
      "address": "0xfA8d51679f8f809Ce09255e0BA47C412bA9Bb8AA",
      "txHash": "0xcb88554c15c3494ae289100fac9f9a0890d89da5198adc322bc45fd711351065",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3604_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6115_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6420",
            "src": "abstracts/ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:265"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1121_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:277"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:100"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1121_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1121_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1121_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1107"
              }
            ]
          },
          "t_enum(ReservationStatus)1107": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6420": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6115_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6115_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5844_storage"
              }
            ]
          },
          "t_struct(Set)5844_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3604_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3604_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "060235c6df870a616662e522c4d3545b8db916c9b9198252237752812e912646": {
      "address": "0x47c456E83Acecb3e6d2A2cC37c57B390F017963E",
      "txHash": "0xf70e3e20e1ac0c8c340a34b76d850c97069ed159ad5b2566fe62b52e86baff7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3583_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6094_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6399",
            "src": "abstracts/ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:265"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1100_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:277"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:93"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1100_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1100_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1100_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1086"
              }
            ]
          },
          "t_enum(ReservationStatus)1086": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6399": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6094_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6094_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5823_storage"
              }
            ]
          },
          "t_struct(Set)5823_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3583_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3583_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "69bcccf5d0799d217487e63c6144ac83e02fab6fefcf0fa967e41b9d20765205": {
      "address": "0x5fFC33Ee9D24D51bdf2D9556d4F78cD404659409",
      "txHash": "0x1487b6cb01323054175b913136038f66cc40d1cb136a464e62e562504b79c7df",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3779_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6290_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6595",
            "src": "abstracts/ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:265"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1100_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:302"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:93"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1100_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1100_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1100_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1086"
              }
            ]
          },
          "t_enum(ReservationStatus)1086": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6595": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6290_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6290_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6019_storage"
              }
            ]
          },
          "t_struct(Set)6019_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3779_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3779_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "79b7a66060e54b9107d1a16dd9a86242964533229796a8e98f2137772cfd7d9d": {
      "address": "0x78B684CB396489d3358d04744f28f01123525df6",
      "txHash": "0x0f4bc5625b4a9960903fbe64afa58d1ac0416958ad335a0607762350b05fc147",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol:29"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)2054_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4565_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol:82"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)4870",
            "src": "abstracts/ERC20Wrapper.sol:19"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:21"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:175"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:18"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:82"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)584_storage))",
            "src": "abstracts/ERC20Reservable.sol:36"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:39"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:164"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:62"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)584_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)584_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)584_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)570"
              }
            ]
          },
          "t_enum(ReservationStatus)570": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)4870": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4565_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4565_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4294_storage"
              }
            ]
          },
          "t_struct(Set)4294_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)2054_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)2054_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "d9bd44bb10797c2f366afc5270b9aca0b475b2bfc58ce8005a91564778157dde": {
      "address": "0x8E0b3b5b16247A364Bd54Ad60adCB15264D8cE46",
      "txHash": "0x560569d73e49be185c0198cf05d832033c5f690d7104d054b15108dd8e6d5934",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)11567_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)14078_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)14383",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:27"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:287"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)815_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:302"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:91"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)815_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)815_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)815_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)801"
              }
            ]
          },
          "t_enum(ReservationStatus)801": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)14383": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)14078_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)14078_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13807_storage"
              }
            ]
          },
          "t_struct(Set)13807_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)11567_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)11567_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "9a02a2363672ea33aac35909c7cc12ad8b47ab767f15f6f4b853afcaa7c7be1e": {
      "address": "0x3005AD86D778C2850A1C936E13b139e17d438037",
      "txHash": "0xbbd64859749a1b36bee69f908c17364f182c61542a840c15d43e3fd640df54d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)11867_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)14378_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)14683",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:27"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:287"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1115_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:302"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:91"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1115_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1115_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1115_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1101"
              }
            ]
          },
          "t_enum(ReservationStatus)1101": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)14683": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)14378_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)14378_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)14107_storage"
              }
            ]
          },
          "t_struct(Set)14107_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)11867_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)11867_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "82b2eefe78561cc1fe42cbd03d30d47e9d23bfbf1ca6dff11b970bbb78124190": {
      "address": "0x81114553999d6b19e297087C1784696323e5e95e",
      "txHash": "0x081f2ca28a07180f483c4444eaccc2303aae3dba1740f7c69d5098b2aa4b2e00",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)11567_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)14078_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)14383",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:27"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:287"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)815_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:302"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:91"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)815_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)815_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)815_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)801"
              }
            ]
          },
          "t_enum(ReservationStatus)801": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)14383": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)14078_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)14078_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13807_storage"
              }
            ]
          },
          "t_struct(Set)13807_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)11567_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)11567_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "f8a3d671bc76155669b4aa7ac6a9cf82e26a176297b9ff780ede283a1792857a": {
      "address": "0x345cA3e014Aaf5dcA488057592ee47305D9B3e10",
      "txHash": "0x4855d31ccf442a70c3ffa45a777ff6a33a97678c456176b4b80956633585429b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)10142_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)12653_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)12958",
            "src": "abstracts/ERC20Wrapper.sol:21"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:23"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:187"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:18"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:82"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)595_storage))",
            "src": "abstracts/ERC20Reservable.sol:36"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:39"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:164"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:62"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)595_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)595_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)595_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)581"
              }
            ]
          },
          "t_enum(ReservationStatus)581": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)12958": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)12653_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)12653_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)12382_storage"
              }
            ]
          },
          "t_struct(Set)12382_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)10142_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)10142_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "d97b82bfb69b656b7287c480ecf350bb877ed602485dbb84ab138f874f988c2d": {
      "address": "0x5eca61f246AE437AcedcF5AC93682db08Bf8F00B",
      "txHash": "0xfef95de9ae6162e2d5c9ad4186b06ab5f75d1530f30f18cbd82826e1d06c0731",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)11583_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)14094_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)14399",
            "src": "abstracts/ERC20Wrapper.sol:25"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:27"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:287"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)831_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:302"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:93"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)831_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)831_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)831_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)817"
              }
            ]
          },
          "t_enum(ReservationStatus)817": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)14399": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)14094_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)14094_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)13823_storage"
              }
            ]
          },
          "t_struct(Set)13823_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)11583_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)11583_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "ccf4598fa151684e3611d3aa2bae59707d8f3322a90ce27f921fe5032e15eba6": {
      "address": "0xccc6164E4f4757C5C98B5628E3E2188D63DF653f",
      "txHash": "0xb71605f9c279021280cc2c9fd7b0bddab61d2c9d28086eca6a1040865872eca6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3441_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5952_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6257",
            "src": "abstracts/ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:270"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:22"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:127"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)831_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:302"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:93"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)831_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)831_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)831_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)817"
              }
            ]
          },
          "t_enum(ReservationStatus)817": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6257": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5952_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)5952_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5681_storage"
              }
            ]
          },
          "t_struct(Set)5681_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3441_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3441_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "a1f435cce88a77eacba92bbf721e1f38535559100765973a9f6f5c697d492a05": {
      "address": "0x1a5ac4165Fd7ea1b55B686fC6eF834ab0E166B7f",
      "txHash": "0xe41299416e4a6f3a7ffa094a677c1fc0e0f03e0afb00cd7d0d2ee7513a2213f2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3452_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5963_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:360"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6268",
            "src": "abstracts/ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:269"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:26"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:155"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)842_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:302"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:96"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)842_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)842_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)842_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)828"
              }
            ]
          },
          "t_enum(ReservationStatus)828": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6268": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5963_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)5963_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5692_storage"
              }
            ]
          },
          "t_struct(Set)5692_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3452_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3452_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "c5d8fd2b043f4e7dc9a6b5a21d6648d0b86f820f12e473a7b1d2f4cda39711f0": {
      "address": "0x867B8f7f4bA5AEe76d19721812aFac3995102393",
      "txHash": "0x8e8bfb27a55bd1f60d09ee2c8f62a9a6a268d3008f88f94fc5e6186da6e80fca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3735_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6242_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:359"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6547",
            "src": "abstracts/ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:269"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:26"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:155"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1124_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:302"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:96"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1124_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1124_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1124_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1110"
              }
            ]
          },
          "t_enum(ReservationStatus)1110": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6547": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6242_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6242_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5971_storage"
              }
            ]
          },
          "t_struct(Set)5971_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3735_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3735_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "250a630aa4b70f1c2c6ff5445bc442fbb383b44093833a2f21c811ada5cc1aac": {
      "address": "0x1bc6e1005448083192020843a59504cb8e07471A",
      "txHash": "0xfd16f71b7d4fb615dd09841d1223824389a66520a9fae73f76eb94b9fc2bf2ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3706_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6213_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:359"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6518",
            "src": "abstracts/ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:270"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:26"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:155"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1092_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:302"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "ERC20WrapperGluwacoin.sol:27"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:104"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1092_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1092_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1092_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1078"
              }
            ]
          },
          "t_enum(ReservationStatus)1078": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6518": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6213_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6213_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5942_storage"
              }
            ]
          },
          "t_struct(Set)5942_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3706_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3706_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "3aa473db7fac5d022d3e0be095eb5885d140285402c3f7aa7969d6c668736a2f": {
      "address": "0x68321fDe198Bb9bb69DE5eF539151C2d90063691",
      "txHash": "0x37f8d4a860ee12c5b6a7c6ae111ba66c7df18aac6ac71f88cef1d769f106b219",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3818_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6325_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:359"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6630",
            "src": "abstracts/ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:270"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:26"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:155"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1183_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:302"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "ERC20WrapperGluwacoin.sol:27"
          },
          {
            "contract": "ERC20WrapperGluwacoin",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoin.sol:104"
          },
          {
            "contract": "ExampleCoin",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "ExampleCoin.sol:14"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1183_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1183_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1183_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1169"
              }
            ]
          },
          "t_enum(ReservationStatus)1169": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6630": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6325_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6325_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6054_storage"
              }
            ]
          },
          "t_struct(Set)6054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3818_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3818_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "1801e94cfb97d5ed2f75a6b7a793b37c169125609332c53798fc2dcdc8fb3db0": {
      "address": "0xe826b297cDf913eC3b04097306885f35FC32F278",
      "txHash": "0xc4f3cb3a2ccdf687ac87b0dfc93109ec55c4a3c4107de63cdb3f59b80638e2d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)3818_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:77"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)6325_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:33"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:97"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:359"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_token",
            "type": "t_contract(IERC20)6630",
            "src": "abstracts/ERC20Wrapper.sol:24"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20Wrapper.sol:26"
          },
          {
            "contract": "ERC20Wrapper",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Wrapper.sol:270"
          },
          {
            "contract": "ERC20ETHless",
            "label": "_usedNonces",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "abstracts/ERC20ETHlessTransfer.sol:26"
          },
          {
            "contract": "ERC20ETHless",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20ETHlessTransfer.sol:155"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_reserved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1183_storage))",
            "src": "abstracts/ERC20Reservable.sol:40"
          },
          {
            "contract": "ERC20Reservable",
            "label": "_totalReserved",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "abstracts/ERC20Reservable.sol:43"
          },
          {
            "contract": "ERC20Reservable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "abstracts/ERC20Reservable.sol:302"
          },
          {
            "contract": "ERC20WrapperGluwacoinV2",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "ERC20WrapperGluwacoinV2.sol:27"
          },
          {
            "contract": "ERC20WrapperGluwacoinV2",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "ERC20WrapperGluwacoinV2.sol:103"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Reservation)1183_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ERC20Reservable.Reservation))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Reservation)1183_storage)": {
            "label": "mapping(uint256 => struct ERC20Reservable.Reservation)"
          },
          "t_struct(Reservation)1183_storage": {
            "label": "struct ERC20Reservable.Reservation",
            "members": [
              {
                "label": "_amount",
                "type": "t_uint256"
              },
              {
                "label": "_fee",
                "type": "t_uint256"
              },
              {
                "label": "_recipient",
                "type": "t_address"
              },
              {
                "label": "_executor",
                "type": "t_address"
              },
              {
                "label": "_expiryBlockNum",
                "type": "t_uint256"
              },
              {
                "label": "_status",
                "type": "t_enum(ReservationStatus)1169"
              }
            ]
          },
          "t_enum(ReservationStatus)1169": {
            "label": "enum ERC20Reservable.ReservationStatus",
            "members": [
              "Draft",
              "Active",
              "Reclaimed",
              "Completed"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)6630": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)6325_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)6325_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6054_storage"
              }
            ]
          },
          "t_struct(Set)6054_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)3818_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)3818_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    }
  }
}
